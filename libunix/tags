!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AssertNow	demand.h	/^#define AssertNow(/;"	d
BIN_TAG	pi-tag.h	/^#define BIN_TAG /;"	d
BUILD_DIR	staff-rules.mk	/^BUILD_DIR ?= .\/objs$/;"	m
CC	Makefile	/^CC ?= gcc$/;"	m
CC_DEPS	staff-rules.mk	/^CC_DEPS := $(OBJS:.o=.d) $/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -Og -Wall -Wno-unused-function -Werror -Wno-unused-variable$/;"	m
DEPS	staff-rules.mk	/^DEPS := $(LU)\/Makefile $(LU)\/staff-rules.mk$/;"	m
HANDOFF_FD	libunix.h	/^#define HANDOFF_FD /;"	d
LIBNAME	Makefile	/^LIBNAME = libunix.a$/;"	m
LIB_SRC	Makefile	/^LIB_SRC := $(wildcard .\/*.c)$/;"	m
LU	staff-rules.mk	/^LU := $(CS140E_FINAL_PROJ_PATH)\/libunix$/;"	m
OBJS	staff-rules.mk	/^OBJS := $(foreach o, $(OBJS), $(BUILD_DIR)\/$(notdir $o))$/;"	m
OBJS	staff-rules.mk	/^OBJS := $(patsubst %.c, %.o, $(SOURCES))$/;"	m
Q	Q.h	/^typedef struct Q {$/;"	s
Q_append	Q.h	/^static void Q_append(Q_t *q, E *e) {$/;"	f
Q_empty	Q.h	/^static int Q_empty(Q_t *q)  { $/;"	f
Q_init	Q.h	/^static void Q_init(Q_t *q) {$/;"	f
Q_insert_after	Q.h	/^static void Q_insert_after(Q_t *q, E *e, E *e_new) {$/;"	f
Q_mk	Q.h	/^static inline Q_t Q_mk(void) {$/;"	f
Q_nelem	Q.h	/^static unsigned Q_nelem(Q_t *q) { return q->cnt; }$/;"	f
Q_next	Q.h	/^static E *Q_next(E *e)      { return e->next; }$/;"	f
Q_pop	Q.h	/^static E *Q_pop(Q_t *q) {$/;"	f
Q_push	Q.h	/^static void Q_push(Q_t *q, E *e) {$/;"	f
Q_start	Q.h	/^static E *Q_start(Q_t *q)   { return q->head; }$/;"	f
Q_t	Q.h	/^} Q_t;$/;"	t	typeref:struct:Q
TARGET	staff-rules.mk	/^TARGET := libunix.a$/;"	m
TIME_CYC	time-macros.h	/^#define TIME_CYC(/;"	d
TIME_CYC_10	time-macros.h	/^#define TIME_CYC_10(/;"	d
TIME_CYC_PRINT	time-macros.h	/^#define TIME_CYC_PRINT(/;"	d
TIME_CYC_PRINT10	time-macros.h	/^#define TIME_CYC_PRINT10(/;"	d
_SVID_SOURCE	find-ttyusb.c	/^#define _SVID_SOURCE$/;"	d	file:
_SVID_SOURCE	resolve-pi-path.c	/^#define _SVID_SOURCE$/;"	d	file:
_XSTRING	demand.h	/^#define _XSTRING(/;"	d
__DEMAND_H__	demand.h	/^#define __DEMAND_H__$/;"	d
__FAST_HASH32_H__	fast-hash32.h	/^#define __FAST_HASH32_H__$/;"	d
__LIBUNIX_H__	libunix.h	/^#define __LIBUNIX_H__$/;"	d
__PITAG_H__	pi-tag.h	/^#define __PITAG_H__$/;"	d
__PI_BITSUPPORT_H__	bit-support.h	/^#define __PI_BITSUPPORT_H__$/;"	d
__Q_H__	Q.h	/^#define __Q_H__$/;"	d
__TIME_MACROS_H__	time-macros.h	/^#define __TIME_MACROS_H__$/;"	d
argv_print	argv-print.c	/^void argv_print(const char *msg, char *argv[]) {$/;"	f
bit_clr	bit-support.h	/^bit_clr(uint32_t x, unsigned bit) {$/;"	f
bit_count	bit-support.h	/^bit_count(uint32_t x) {$/;"	f
bit_get	bit-support.h	/^#define bit_get /;"	d
bit_is_off	bit-support.h	/^bit_is_off(uint32_t x, unsigned bit) {$/;"	f
bit_is_on	bit-support.h	/^bit_is_on(uint32_t x, unsigned bit) {$/;"	f
bit_isset	bit-support.h	/^#define bit_isset /;"	d
bit_not	bit-support.h	/^bit_not(uint32_t x, unsigned bit) {$/;"	f
bit_set	bit-support.h	/^bit_set(uint32_t x, unsigned bit) {$/;"	f
bits_clr	bit-support.h	/^bits_clr(uint32_t x, unsigned lb, unsigned ub) {$/;"	f
bits_diff	bit-support.h	/^bits_diff(uint32_t A, uint32_t B) {$/;"	f
bits_eq	bit-support.h	/^bits_eq(uint32_t x, unsigned lb, unsigned ub, uint32_t val) {$/;"	f
bits_get	bit-support.h	/^bits_get(uint32_t x, unsigned lb, unsigned ub) {$/;"	f
bits_intersect	bit-support.h	/^bits_intersect(uint32_t x, uint32_t y) {$/;"	f
bits_mask	bit-support.h	/^static inline uint32_t bits_mask(unsigned nbits) {$/;"	f
bits_not	bit-support.h	/^static inline uint32_t bits_not(uint32_t x) {$/;"	f
bits_set	bit-support.h	/^bits_set(uint32_t x, unsigned lb, unsigned ub, uint32_t v) {$/;"	f
bits_union	bit-support.h	/^bits_union(uint32_t x, uint32_t y) {$/;"	f
can_read	can-read.c	/^int can_read(int fd) { return can_read_timeout(fd, 0); }$/;"	f
can_read_timeout	can-read.c	/^int can_read_timeout(int fd, unsigned usec) {$/;"	f
child_clean_exit	get-exitcode.c	/^int child_clean_exit(int pid, int *status) {$/;"	f
child_clean_exit_noblk	get-exitcode.c	/^int child_clean_exit_noblk(int pid, int *status) {$/;"	f
clean_exit	demand.h	/^#define clean_exit(/;"	d
close_nofail	libunix.h	/^#define close_nofail(/;"	d
close_open_fds	close-open-fds.c	/^void close_open_fds(void) {$/;"	f
close_open_fds_except	close-open-fds.c	/^void close_open_fds_except(int fd) {$/;"	f
cnt	Q.h	/^    unsigned cnt;$/;"	m	struct:Q
crc32_tab	crc.c	/^static uint32_t crc32_tab[] = {$/;"	v	file:
create_file	creat-file.c	/^int create_file(const char *name) {$/;"	f
debug	demand.h	/^#   define debug(/;"	d
debug_output	demand.h	/^#   define debug_output(/;"	d
demand	demand.h	/^#   define demand(/;"	d
die	demand.h	/^#define die(/;"	d
exists	tty-gone.c	/^int exists(const char *name) {$/;"	f
fast_hash	fast-hash.c	/^uint32_t fast_hash(const void * _data, uint32_t len) {$/;"	f
fast_hash_inc	fast-hash.c	/^uint32_t fast_hash_inc(const void * _data, uint32_t len, uint32_t hash) {$/;"	f
fast_hash_inc32	fast-hash32.h	/^static inline uint32_t fast_hash_inc32(const void * _data, uint32_t len, uint32_t hash) {$/;"	f
fatal	demand.h	/^#define fatal(/;"	d
fcreate_file	creat-file.c	/^FILE *fcreate_file(const char *name) {$/;"	f
fd	pi-tag.h	/^    int fd;$/;"	m	struct:__anon1
filter	find-ttyusb.c	/^static int filter(const struct dirent *d) {$/;"	f	file:
find_pi_binary	resolve-pi-path.c	/^const char *find_pi_binary(const char *name) {$/;"	f
find_ttyusb	find-ttyusb.c	/^char *find_ttyusb(void) {$/;"	f
find_ttyusb_first	find-ttyusb.c	/^char *find_ttyusb_first(void) {$/;"	f
find_ttyusb_last	find-ttyusb.c	/^char *find_ttyusb_last(void) {$/;"	f
gcc_mb	libunix.h	/^#define gcc_mb(/;"	d
get16bits	fast-hash.c	/^#define get16bits(/;"	d	file:
get16bits	fast-hash.c	/^#undef get16bits$/;"	d	file:
get16bits	fast-hash32.h	/^#define get16bits(/;"	d
get16bits	fast-hash32.h	/^#undef get16bits$/;"	d
get_uint32	put-get.c	/^uint32_t get_uint32(int fd) {$/;"	f
get_uint8	put-get.c	/^uint8_t get_uint8(int fd) {$/;"	f
handoff_to	handoff-to.c	/^void handoff_to(int our_fd, int child_fd, char *argv[]) {$/;"	f
head	Q.h	/^    E *head, *tail;$/;"	m	struct:Q
impossible	demand.h	/^#define impossible(/;"	d
is_fd_open	handoff-to.c	/^int is_fd_open(int fd) {$/;"	f
link_debug	pitag-linker.c	/^#define link_debug(/;"	d	file:
name_lookup	resolve-pi-path.c	/^char *name_lookup(const char *path, const char *name) {$/;"	f
no_fail	demand.h	/^#define no_fail(/;"	d
notreached	demand.h	/^#define notreached(/;"	d
open_tty	open-tty.c	/^int open_tty(const char *device) {$/;"	f
open_tty_n	open-tty.c	/^int open_tty_n(const char *device, int maxattempts) {$/;"	f
our_crc32	crc.c	/^uint32_t our_crc32(const void *buf, unsigned size) {$/;"	f
our_crc32_inc	crc.c	/^uint32_t our_crc32_inc(const void *buf, unsigned size, uint32_t crc) {$/;"	f
output	demand.h	/^#define output(/;"	d
panic	demand.h	/^#define panic(/;"	d
pi_cat	pi-cat.c	/^void pi_cat(int fd, const char *portname) {$/;"	f
pi_done	pi-cat.c	/^int pi_done(unsigned char *s) {$/;"	f
pi_done	pi-echo.c	/^int pi_done(unsigned char *s) {$/;"	f
pi_echo	pi-echo.c	/^void pi_echo(int unix_fd, int pi_fd, const char *portname) {$/;"	f
pi_roundup	libunix.h	/^#define pi_roundup(/;"	d
pitag_add_bin	pitag-linker.c	/^void pitag_add_bin(pitag_t *h, const char *bin_name, const void *bin, unsigned bin_nbytes) {$/;"	f
pitag_add_bin_file	pitag-linker.c	/^void pitag_add_bin_file(pitag_t *h, const char *bin_name) {$/;"	f
pitag_done	pitag-linker.c	/^void pitag_done(pitag_t *h) {$/;"	f
pitag_start	pitag-linker.c	/^pitag_t pitag_start(const char *out, const void *prog, unsigned nbytes) {$/;"	f
pitag_start_file	pitag-linker.c	/^pitag_t pitag_start_file(const char *out, const char *prog_name) {$/;"	f
pitag_t	pi-tag.h	/^} pitag_t;$/;"	t	typeref:struct:__anon1
prefix_cmp	suffix.c	/^int prefix_cmp(const char *s, const char *prefix) {$/;"	f
put_uint32	put-get.c	/^void put_uint32(int fd, uint32_t u) { write_exact(fd, &u, 4); }$/;"	f
put_uint8	put-get.c	/^void put_uint8(int fd, uint8_t b)   { write_exact(fd, &b, 1); }$/;"	f
read_exact	read-exact.c	/^int read_exact(int fd, void *data, unsigned n) {$/;"	f
read_file	read-file.c	/^void *read_file(unsigned *size, const char *name) {$/;"	f
read_timeout	read-timeout.c	/^int read_timeout(int fd, void *data, unsigned n, unsigned timeout) {$/;"	f
remove_nonprint	pi-cat.c	/^void remove_nonprint(uint8_t *buf, int n) {$/;"	f
remove_nonprint	pi-echo.c	/^void remove_nonprint(uint8_t *buf, int n) {$/;"	f
run_system	run-system.c	/^void run_system(const char *fmt, ...) {$/;"	f
run_system_err_ok	run-system.c	/^int run_system_err_ok(int verbose_p, const char *fmt, ...) {$/;"	f
set_tty_to_8n1	set-tty-8n1.c	/^int set_tty_to_8n1(int fd, unsigned speed, double timeout) {$/;"	f
str2dupf	strcatf.c	/^char *str2dupf(const char *src1, const char *fmt, ...) {$/;"	f
strcatf	strcatf.c	/^char *strcatf(char *dst, const char *fmt, ...) {$/;"	f
strdupf	strcatf.c	/^char *strdupf(const char *fmt, ...) {$/;"	f
suffix_cmp	suffix.c	/^int suffix_cmp(const char *s, const char *suffix) {$/;"	f
sys_debug	demand.h	/^#define sys_debug(/;"	d
sys_die	demand.h	/^#define sys_die(/;"	d
tail	Q.h	/^    E *head, *tail;$/;"	m	struct:Q
time_get_sec	time-get-usec.c	/^unsigned time_get_sec(void) {$/;"	f
time_get_usec	time-get-usec.c	/^time_usec_t time_get_usec(void) {$/;"	f
time_usec_t	libunix.h	/^typedef unsigned time_usec_t;$/;"	t
todo	demand.h	/^#define todo(/;"	d
tot_nbytes	pi-tag.h	/^    unsigned tot_nbytes;      \/\/ total size so far.$/;"	m	struct:__anon1
trace	demand.h	/^#define trace(/;"	d
tty_gone	tty-gone.c	/^int tty_gone(const char *ttyname) {$/;"	f
ttyusb_prefixes	find-ttyusb.c	/^static const char *ttyusb_prefixes[] = {$/;"	v	file:
unimplemented	demand.h	/^#define unimplemented(/;"	d
vstrdupf	strcatf.c	/^char *vstrdupf(const char *fmt, va_list ap) {$/;"	f
write_exact	write-exact.c	/^int write_exact(int fd, const void *data, unsigned n) {$/;"	f
